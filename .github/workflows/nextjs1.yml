# Workflow Name
name: Deploy Next.js site to Pages

# Trigger on pushes to the main branch and manual triggers
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Permissions for the GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Detect package manager in the frontend directory
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/frontend/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/frontend/package-lock.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      # Step 3: Setup Node.js environment
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      # Step 4: Setup GitHub Pages configuration for Next.js
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      # Step 5: Restore cache for faster builds (specific to frontend)
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            frontend/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('next-js/package-lock.json', 'next-js/yarn.lock') }}-${{ hashFiles('next-js/**/*.js', 'next-js/**/*.jsx', 'next-js/**/*.ts', 'next-js/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('next-js/package-lock.json', 'next-js/yarn.lock') }}-

      # Step 6: Install dependencies in the frontend directory
      - name: Install dependencies
        run: |
          cd frontend
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      # Step 7: Build the Next.js project in the frontend directory
      - name: Build with Next.js
        run: |
          cd frontend
          ${{ steps.detect-package-manager.outputs.runner }} next build
          # Export the Next.js project as a static site
          ${{ steps.detect-package-manager.outputs.runner }} next export

      # Step 8: Upload the build artifact from the frontend 'out' directory
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/out

  # Deployment Job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Step 9: Deploy to GitHub Pages using the uploaded artifact
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
